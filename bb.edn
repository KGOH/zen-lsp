{:paths ["script"]
 :deps  {borkdude/gh-release-artifact
         #_ {:local/root "../gh-release-artifact"}
         {:git/url "https://github.com/borkdude/gh-release-artifact"
          :sha     "2f8898d84126a4e922c490f8614211a8b0cf67cd"}}
 :tasks {:requires          ([babashka.fs :as fs])
         :init              (do (defn print-public-task [k]
                                  (let [{:keys [:private :name]} (current-task)]
                                    (when-not private
                                      (println (case k :enter "☐" "✓") name))))
                                (def version "0.0.1"))
         :leave             (print-public-task :leave)

         java1.8            {:doc      "Asserts that we are using java 1.8"
                             :requires ([clojure.java.shell :refer [sh]]
                                        [clojure.string :as str])
                             :task     (let [java-version (:err (sh "java" "-version"))]
                                         (assert (str/includes? java-version "1.8.0") "Must use Java 1.8.0"))}

         server:test        {:doc "Run tests"
                             :task (clojure {:dir "server"} "-M:test")}

         uberjar            {:task    (str (fs/path "target" (str "zen-lsp-server-" version "-standalone.jar")))}

         server:build       {:doc     "Produces lsp server standalone jar"
                             :depends [java1.8 uberjar]
                             :task    (when (seq (fs/modified-since (fs/file "server" uberjar)
                                                                    ["server/deps.edn" "server/src"]))
                                        (clojure {:dir "server"} "-T:build uber" ":uber-file" (pr-str uberjar)))}

         vscode-server      {:doc     "Copies lsp server jar to vscode extension"
                             :depends [uberjar server:build]
                             :task    (fs/copy (fs/file "server" uberjar)
                                               (fs/path "vscode-extension" "zen-lsp-standalone.jar")
                                               {:replace-existing true})}

         vscode-version     {:doc     "Prepares package.json with up to date clj-kondo version"
                             :task    :TODO}

         vscode-package     {:doc    "Builds vscode package"
                             :depends [vscode-server vscode-version]
                             :task    (shell {:dir "vscode-extension"} "vsce package")}

         vscode-publish     {:doc     "Publishes vscode extension to marketplace"
                             :depends [vscode-server vscode-version]
                             :task    (shell {:dir "vscode-extension"} "vsce publish")}

         ovsx-publish       {:doc     "Publishes vscode extension to ovsx thing"
                             :depends [vscode-server vscode-version]
                             :task    (shell {:dir "vscode-extension"}
                                             (str "ovsx publish --pat "
                                                  (System/getenv "OVSX_TOKEN")))}

         publish            {:doc     "The mother of all tasks: publishes everything needed for new release"
                             :depends [upload-jar vscode-publish ovsx-publish]}}}
